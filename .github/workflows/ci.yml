name: CI workflow

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build_on_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - cpp_comp: g++
            c_comp: gcc
          - cpp_comp: clang++
            c_comp: clang

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare build
        run: cmake -H. -B_build -DCMAKE_CXX_COMPILER=${{matrix.cpp_comp}} -DCMAKE_C_COMPILER=${{matrix.c_comp}}
      
      - name: Build
        run: cmake --build _build
      
      - name: Test programs
        run: |
          echo "1 -5 6" | _build/solver_application/solver_app
          _build/hello_world_application/hello

  build_on_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare build
        run: cmake . -B_build
      
      - name: Build
        run: cmake --build _build
      
      - name: Test programs
        run: |
          echo "1 -5 6" | _build\solver_application\Debug\solver_app
          _build\hello_world_application\Debug\hello

  docker_build_and_run:
    runs-on: ubuntu-latest
    needs: [build_on_linux, build_on_windows]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Docker image
        run: docker build -t logger .
        
      - name: Create artifacts directory
        run: mkdir -p artifacts
        
      - name: Run container with validation and save output
        run: |
          echo "Running validation tests and saving outputs:"
          
          echo "Test case 1 - Normal (1 -5 6):"
          echo "1 -5 6" | docker run -i --rm logger > artifacts/result1.txt
          
          echo "Test case 2 - Edge case (1 -2 1):"
          echo "1 -2 1" | docker run -i --rm logger > artifacts/result2.txt
          
          echo "Test case 3 - Invalid (1 0 1):"
          echo "1 0 1" | docker run -i --rm logger > artifacts/result3.txt || echo "Expected error for this case"
          
      - name: Verify no NaN results
        run: |
          output=$(cat artifacts/result1.txt)
          if [[ "$output" == *"nan"* ]]; then
            echo "ERROR: NaN detected in output!"
            echo "$output"
            exit 1
          fi
          echo "Validation passed!"
          echo "$output"
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: solver-results
          path: artifacts/